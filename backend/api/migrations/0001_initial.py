# Generated by Django 5.0.1 on 2024-01-26 12:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="OpenAILogitBias",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=255)),
                (
                    "bias",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(-100),
                        ]
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "OpenAI Logit Biases",
            },
        ),
        migrations.CreateModel(
            name="OpenAIMessageRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "OpenAI Message Roles",
            },
        ),
        migrations.CreateModel(
            name="OpenAIModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "OpenAI Models",
            },
        ),
        migrations.CreateModel(
            name="OpenAIMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(default="", max_length=255)),
                ("content", models.TextField()),
                (
                    "name",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.openaimessagerole",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "OpenAI Messages",
            },
        ),
        migrations.CreateModel(
            name="OpenAIChat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(default="", max_length=255)),
                ("active", models.BooleanField(default=True)),
                ("endpoint", models.CharField(max_length=255)),
                ("api_key", models.CharField(max_length=255)),
                (
                    "frequency_penalty",
                    models.FloatField(
                        blank=True,
                        default=None,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-2),
                            django.core.validators.MaxValueValidator(2),
                        ],
                    ),
                ),
                (
                    "max_tokens",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(2000),
                        ]
                    ),
                ),
                (
                    "presence_penalty",
                    models.FloatField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(-2),
                            django.core.validators.MaxValueValidator(2),
                        ],
                    ),
                ),
                (
                    "temperature",
                    models.FloatField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2),
                        ],
                    ),
                ),
                (
                    "top_p",
                    models.FloatField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "user",
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                ("logit_bias", models.ManyToManyField(to="api.openailogitbias")),
                ("messages", models.ManyToManyField(to="api.openaimessage")),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.openaimodel",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "OpenAI Chat Configuration",
            },
        ),
    ]
